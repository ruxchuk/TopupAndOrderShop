<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddBehindhand.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jFwClAL1AAhCEAf/2Q==
</value>
  </data>
</root>